import { Translations } from "@orbs-network/twap-ui";
import { useMemo } from "react";
import { useAdapterContext } from "./context";

const prefix = "twap.";

export const useTranslation = () => {
  const { t } = useAdapterContext();

  return useMemo((): Partial<Translations> => {
    if (!t) return {} as Partial<Translations>;
    return {
      expirationTooltip: t(`${prefix}expirationTooltip`),
      tradeIntervalTooltip: t(`${prefix}tradeIntervalTooltip`),
      chunkSizeTooltip: t(`${prefix}chunkSizeTooltip`),
      totalTradesTooltip: t(`${prefix}totalTradesTooltip`),
      minDstAmountTooltipMarket: t(`${prefix}minDstAmountTooltipMarket`),
      minDstAmountTooltipLimit: t(`${prefix}minDstAmountTooltipLimit`),
      limitPriceTooltip: t(`${prefix}limitPriceTooltip`),
      sizePerTradeTooltip: t(`${prefix}sizePerTradeTooltip`),
      maxDurationTooltip: t(`${prefix}maxDurationTooltip`),
      tradeIntervalTootlip: t(`${prefix}tradeIntervalTootlip`),
      sliderMinSizeTooltip: t(`${prefix}sliderMinSizeTooltip`),
      connect: t(`${prefix}connect`),
      selectTokens: t(`${prefix}selectTokens`),
      disclaimer: t(`${prefix}disclaimer`),
      days: t(`${prefix}days`),
      hours: t(`${prefix}hours`),
      minutes: t(`${prefix}minutes`),
      seconds: t(`${prefix}seconds`),
      hrs: t(`${prefix}hrs`),
      mins: t(`${prefix}mins`),
      switchNetwork: t(`${prefix}switchNetwork`),
      wrap: t(`${prefix}wrap`),
      unwrap: t(`${prefix}unwrap`),
      approve: t(`${prefix}approve`),
      placeOrder: t(`${prefix}placeOrder`),
      confirmOrder: t(`${prefix}confirmOrder`),
      enterAmount: t(`${prefix}enterAmount`),
      insufficientFunds: t(`${prefix}insufficientFunds`),
      enterTradeSize: t(`${prefix}enterTradeSize`),
      enterMaxDuration: t(`${prefix}enterMaxDuration`),
      enterTradeInterval: t(`${prefix}enterTradeInterval`),
      tradeSizeMustBeEqual: t(`${prefix}tradeSizeMustBeEqual`),
      sizePerTrade: t(`${prefix}sizePerTrade`),
      tradeInterval: t(`${prefix}tradeInterval`),
      maxDuration: t(`${prefix}maxDuration`),
      totalTrades: t(`${prefix}totalTrades`),
      cancelOrder: t(`${prefix}cancelOrder`),
      marketOrder: t(`${prefix}marketOrder`),
      limitOrder: t(`${prefix}limitOrder`),
      limitPrice: t(`${prefix}limitPrice`),
      marketPrice: t(`${prefix}marketPrice`),
      currentMarketPrice: t(`${prefix}currentMarketPrice`),
      from: t(`${prefix}from`),
      to: t(`${prefix}to`),
      orders: t(`${prefix}orders`),
      confirmTx: t(`${prefix}confirmTx`),
      expiration: t(`${prefix}expiration`),
      orderType: t(`${prefix}orderType`),
      minReceivedPerTrade: t(`${prefix}minReceivedPerTrade`),
      ordersTooltip: t(`${prefix}ordersTooltip`),
      poweredBy: t(`${prefix}poweredBy`),
      balance: t(`${prefix}balance`),
      selectToken: t(`${prefix}selectToken`),
      partialFillWarning: t(`${prefix}partialFillWarning`),
      tradeIntervalWarning: t(`${prefix}tradeIntervalWarning`),
      limitPriceMessage: t(`${prefix}limitPriceMessage`),
      hideCancelledOrders: t(`${prefix}hideCancelledOrders`),
      openOrders: t(`${prefix}openOrders`),
      orderHistory: t(`${prefix}orderHistory`),
      hide: t(`${prefix}hide`),
      canceled: t(`${prefix}canceled`),
      completed: t(`${prefix}completed`),
      expired: t(`${prefix}expired`),
      open: t(`${prefix}open`),
      setMarketRate: t(`${prefix}setMarketRate`),
      noOpenOrders: t(`${prefix}noOpenOrders`),
      noOrderHistory: t(`${prefix}noOrderHistory`),
      sellAtRate: t(`${prefix}sellAtRate`),
      status: t(`${prefix}status`),
      viewOnExplorer: t(`${prefix}viewOnExplorer`),
      orderId: t(`${prefix}orderId`),
      price: t(`${prefix}price`),
      fee: t(`${prefix}fee`),
      expiry: t(`${prefix}expiry`),
      filled: t(`${prefix}filled`),
      feeTooltip: t(`${prefix}feeTooltip`),
      gain: t(`${prefix}gain`),
      insufficientLiquidity: t(`${prefix}insufficientLiquidity`),
      searchingForBestPrice: t(`${prefix}searchingForBestPrice`),
      placeLimitOrder: t(`${prefix}placeLimitOrder`),
      placeTWAPOrder: t(`${prefix}placeTWAPOrder`),
      limitPriceWarning: t(`${prefix}limitPriceWarning`),
      orderCancelled: t(`${prefix}orderCancelled`),
      orderCancelledMessage: t(`${prefix}orderCancelledMessage`),
      pleaseApproveItInYourWallet: t(`${prefix}pleaseApproveItInYourWallet`),
      confirmPlacing: t(`${prefix}confirmPlacing`),
      limitOrderPlaced: t(`${prefix}limitOrderPlaced`),
      twapOrderPlaced: t(`${prefix}twapOrderPlaced`),
      orderSubmitted: t(`${prefix}orderSubmitted`),
      transactionRejected: t(`${prefix}transactionRejected`),
      transactionFailed: t(`${prefix}transactionFailed`),
      insufficientBalance: t(`${prefix}insufficientBalance`),
      insufficientBalanceMessage: t(`${prefix}insufficientBalanceMessage`),
      errorMessage: t(`${prefix}errorMessage`),
      wrappingError: t(`${prefix}wrappingError`),
      approvingError: t(`${prefix}approvingError`),
      orderPlacingError: t(`${prefix}orderPlacingError`),
      transactionSubmissionWentWrong: t(`${prefix}transactionSubmissionWentWrong`),
      canceledApproval: t(`${prefix}canceledApproval`),
      canceledWrapping: t(`${prefix}canceledWrapping`),
      canceledOrderPlacing: t(`${prefix}canceledOrderPlacing`),
      canceledApprovalMessage: t(`${prefix}canceledApprovalMessage`),
      canceledWrappingMessage: t(`${prefix}canceledWrappingMessage`),
      canceledOrderPlacingMessage: t(`${prefix}canceledOrderPlacingMessage`),
      canceledTransaction: t(`${prefix}canceledTransaction`),
      canceledTransactionMessage: t(`${prefix}canceledTransactionMessage`),
      twap: t(`${prefix}twap`),
      limit: t(`${prefix}limit`),
      loading: t(`${prefix}loading`),
      confirm: t(`${prefix}confirm`),
      srcTokenForDstToken: t(`${prefix}srcTokenForDstToken`),
    };
  }, [t]);
};
